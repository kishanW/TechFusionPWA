#pragma checksum "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1d614fd3e884375d454d49223ccea7e82833c694"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\_ViewImports.cshtml"
using Demo;

#line default
#line hidden
#line 2 "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\_ViewImports.cshtml"
using Demo.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d614fd3e884375d454d49223ccea7e82833c694", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e18407c5b9dabc62761fc6cdd8f67817f22bc556", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/vue.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/axios.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 445, true);
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-lg-12"">
	    <h1 class=""display-4"">TechFusion PWA Demo</h1>
    </div>
</div>

<div class=""row"" id=""vueApp"">
    
    <div class=""col-lg-3"">
        
		<p>
            Hey do you want to subscribe to notifications? 
		</p>
        
		<button class=""btn btn-primary"" v-on:click=""SubscribeButtonClicked"">
			{{subscribeButtonText}}
		</button>
    </div>

</div>

<!--Vue JS/ Axios-->
");
            EndContext();
            BeginContext(490, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d614fd3e884375d454d49223ccea7e82833c6944583", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(525, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(527, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d614fd3e884375d454d49223ccea7e82833c6945760", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(564, 218, true);
            WriteLiteral("\r\n<script>\r\n\tvar vueApp = new Vue({\r\n\t\tel: \"#vueApp\",\r\n\t\tdata: {\r\n\t\t\tappServerKey: \'BPXeq_JIEnkyFB2e53_X4DTA7swWEDUu7s-OHgQNZG06ubdJaUlqolAbN4ZxAxbm5rwrO9jw2LqXDDDZWINwfh4\',\r\n\t\t\tisSubscribed: false,\r\n\t\t\tsubscribeUrl: \'");
            EndContext();
            BeginContext(783, 23, false);
#line 35 "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\Home\Index.cshtml"
                      Write(Url.Action("Subscribe"));

#line default
#line hidden
            EndContext();
            BeginContext(806, 24, true);
            WriteLiteral("\',\r\n\t\t\tunsubscribeUrl: \'");
            EndContext();
            BeginContext(831, 25, false);
#line 36 "C:\Users\kwanigasinghe\Documents\GitHub\TechFusionPWA\4-web-app\Demo\Demo\Views\Home\Index.cshtml"
                        Write(Url.Action("UnSubscribe"));

#line default
#line hidden
            EndContext();
            BeginContext(856, 5229, true);
            WriteLiteral(@"',
			_serviceWorkerRegistration: ''
		},
		computed: {
			subscribeButtonText()
			{
				return this.isSubscribed ? ""Unsubscribe"" : ""Subscribe"";
			}
		},
		methods: {
			GetApplicationServerKey()
			{
				var appServerKey = this.appServerKey;
				var padding = ""="".repeat((4 - (appServerKey.length % 4)) % 4);
				var base64 = (appServerKey + padding)
					.replace(/\-/g, ""+"")
					.replace(/_/g, ""/"");

				var rawData = window.atob(base64);
				var outputArray = new Uint8Array(rawData.length);

				for (var i = 0; i < rawData.length; ++i)
				{
					outputArray[i] = rawData.charCodeAt(i);
				}
				return outputArray;
			},

			UpdateIsSubscribedFlag(newVal)
			{
				this.isSubscribed = newVal === true;
			},
			SubscribeButtonClicked()
			{
				this.isSubscribed ? this.Unsubscribe() : this.Subscribe();
			},
			Subscribe()
			{
				//get user permission
				this.GetUserPermissionToSubscribe();

				//ask to subscribe - sending to server is done here as well
				this");
            WriteLiteral(@".SubscribeToPushNotifications();

			},
			Unsubscribe()
			{
				var updateIsSubscribedFlagMethod = this.UpdateIsSubscribedFlag;

				//remove local subscription
				this._serviceWorkerRegistration.pushManager
					.getSubscription()
					.then(function (subscription) {
						if (subscription) {
							return subscription.unsubscribe();
						}
						return undefined;
					})
					.then(function () {
						console.log(""[site.js] locally unsubscribed from push notifications"");
						localStorage.removeItem(""push-subscription"");
						updateIsSubscribedFlagMethod(false);
					})
					.catch(function (unsubscribeFromPushError) {
						console.log(""[site.js] Error unsubscribing"", unsubscribeFromPushError);
					});

				var data = {
					endPoint: '',
					p256dH: '',
					auth: ''
				};
				axios.post(this.unsubscribeUrl, data)
					.then(function () {
						console.log(""subscription deletion request sent to server"");
					});
			},
			
			SaveServiceWorkerRegistration(swReg");
            WriteLiteral(@")
			{
				this._serviceWorkerRegistration = swReg;

				var updateIsSubscribedFlagMethod = this.UpdateIsSubscribedFlag;
				swReg.pushManager.getSubscription()
					.then(function(subscription) {
						updateIsSubscribedFlagMethod(subscription !== null);
						window.localStorage.setItem(""push-subscription"", subscription);
					});
			},

			RegisterServiceWorker()
			{
				var saveServiceWorkerRegistrationMethod = this.SaveServiceWorkerRegistration;

				if (""serviceWorker"" in navigator && ""PushManager"" in window) {
					navigator.serviceWorker
						.register(""serviceworker.js"")
						.then(function (swReg) {
							saveServiceWorkerRegistrationMethod(swReg);
						})
						.catch(function (registerSwError) {
							console.error(
								""[site.js] Service worker error - unable to register"",
								registerSwError
							);
						});
				} else {
					console.error(""[site.js] Push messaging is not supported"");
				}
			},

			GetUserPermissionToSubscribe()
			{
				var ");
            WriteLiteral(@"permissionResult = null;
				var getUserPermissionPromise = new Promise(function (resolve, reject) {
					permissionResult = Notification.requestPermission(
						function (result) {
							resolve(result);
						}
					);

					if (permissionResult) {
						permissionResult.then(resolve, reject);
					}
				}).then(function (permissionResult) {
					if (permissionResult !== ""granted"") {
						throw new Error(""We weren't granted permission."");
					}
				});

				return getUserPermissionPromise;
			},

			SubscribeToPushNotifications()
			{
				//check to see if we have a service worker installed
				if (!this._serviceWorkerRegistration) {
					throw new Error(""A service worker must be installed"");
				}

				var appServerKey = this.GetApplicationServerKey();
				var updateIsSubscribedFlagMethod = this.UpdateIsSubscribedFlag;
				var subscribeServerUrl = this.subscribeUrl;
				
				this._serviceWorkerRegistration.pushManager
					.subscribe({
						userVisibleOnly: true, //htt");
            WriteLiteral(@"ps://developers.google.com/web/fundamentals/push-notifications/subscribing-a-user#uservisibleonly_options
						applicationServerKey: appServerKey
					})
					.then(function (subscription) {
						//saving locally and updating flags
						localStorage.setItem(""push-subscription"", JSON.stringify(subscription));
						updateIsSubscribedFlagMethod(true);
					})
				.then(function() {
					var subscription = JSON.parse(localStorage.getItem(""push-subscription""));

					//sending data to server
					var data = {
						endPoint: subscription.endpoint,
						p256dH: subscription.keys.p256dh,
						auth: subscription.keys.auth
					};
					axios.post(subscribeServerUrl, data)
						.then(function ()
						{
							console.log(""push subscription save request sent to server"");
						});
					})
					.catch(function (subscribeToPushError) {
						console.error(""[site.js] Failed to subscribe the user: "", subscribeToPushError);
					});
			},

		}
	});
	Vue.config.devtools = true;
	window.v");
            WriteLiteral("ueApp = vueApp;\r\n\r\n\t$(document).ready(function() {\r\n\t\twindow.vueApp.RegisterServiceWorker();\r\n\t});\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
